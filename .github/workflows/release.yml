name: Android Release

on:
  push:
    branches:
      - appRelease

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > app/google-services.json

      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_PATH }}" | base64 -d > app/keystore.jks

      - name: Check Keystore Existence
        run: ls -al ${{ github.workspace }}/app/

      - name: Get the version (commit SHA)
        id: get_version
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and release APK
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/app/keystore.jks
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Rename APK
        run: mv ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk ${{ github.workspace }}/app/build/outputs/apk/release/app-release-${{ steps.get_version.outputs.sha_short }}.apk

      - name: List directory contents
        run: ls -al ${{ github.workspace }}/app/build/outputs/apk/release/

      - name: Create Release using GitHub CLI
        id: create_release
        run: |
          gh release create ${{ github.ref }} \
            ./app/build/outputs/apk/release/app-release-${{ steps.get_version.outputs.sha_short }}.apk \
            --title "Release ${{ github.ref }}" \
            --notes "New release" \
            --repo ${{ github.repository }}

          UPLOAD_URL=$(gh api repos/${{ github.repository }}/releases/latest --jq '.upload_url')
          echo "::set-output name=upload_url::$UPLOAD_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/app/build/outputs/apk/release/app-release-${{ steps.get_version.outputs.sha_short }}.apk
          asset_name: app-release-${{ steps.get_version.outputs.sha_short }}.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}